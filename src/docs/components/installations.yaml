schemas:
  InstallStatus:
    type: string
    enum: [scheduled, in_progress, completed, failed, canceled]

  Installation:
    type: object
    properties:
      id:                { $ref: './base.yaml#/schemas/ID' }
      external_order_id: { type: string, maxLength: 64 }
      store_id:          { $ref: './base.yaml#/schemas/ID' }
      scheduled_start:   { type: string, format: date-time, nullable: true }
      scheduled_end:     { type: string, format: date-time, nullable: true }
      status:            { $ref: '#/schemas/InstallStatus' }
      notes:             { type: string, nullable: true }
      created_by:        { $ref: './base.yaml#/schemas/ID' }
      updated_by:        { $ref: './base.yaml#/schemas/ID' }
      created_at:        { type: string, format: date-time }
      updated_at:        { type: string, format: date-time }
      items:
        type: array
        items: { $ref: '#/schemas/InstallationItem' }
      crew:
        type: array
        items: { $ref: '#/schemas/CrewAssignment' }

  InstallationCreate:
    type: object
    required: [external_order_id, store_id]
    properties:
      external_order_id: { type: string, maxLength: 64 }
      store_id:          { $ref: './base.yaml#/schemas/ID' }
      scheduled_start:   { type: string, format: date-time, nullable: true }
      scheduled_end:     { type: string, format: date-time, nullable: true }
      status:            { $ref: '#/schemas/InstallStatus' }
      notes:             { type: string, nullable: true }

  InstallationItem:
    type: object
    properties:
      id:                  { $ref: './base.yaml#/schemas/ID' }
      installation_id:     { $ref: './base.yaml#/schemas/ID' }
      external_product_id: { type: string, maxLength: 64 }
      quantity:            { type: integer, minimum: 1, default: 1 }
      room_tag:            { type: string, maxLength: 80, nullable: true }
      special_instructions: { type: string, nullable: true }
      created_at:          { type: string, format: date-time }
      updated_at:          { type: string, format: date-time }

  InstallationItemCreate:
    type: object
    required: [external_product_id]
    properties:
      external_product_id: { type: string, maxLength: 64 }
      quantity:            { type: integer, minimum: 1, default: 1 }
      room_tag:            { type: string, maxLength: 80, nullable: true }
      special_instructions: { type: string, nullable: true }

  CrewAssignment:
    type: object
    properties:
      id:              { $ref: './base.yaml#/schemas/ID' }
      installation_id: { $ref: './base.yaml#/schemas/ID' }
      crew_user_id:    { $ref: './base.yaml#/schemas/ID' }
      role:            { type: string, maxLength: 48, nullable: true }
      accepted_at:     { type: string, format: date-time, nullable: true }
      declined_at:     { type: string, format: date-time, nullable: true }
      created_at:      { type: string, format: date-time }
      updated_at:      { type: string, format: date-time }

  CrewAssignmentCreate:
    type: object
    required: [crew_user_id]
    properties:
      crew_user_id: { $ref: './base.yaml#/schemas/ID' }
      role:         { type: string, maxLength: 48, nullable: true }

  InstallationList:
    type: object
    properties:
      data:
        type: array
        items: { $ref: '#/schemas/Installation' }
      limit:  { type: integer, minimum: 0, default: 20 }
      offset: { type: integer, minimum: 0, default: 0 }

  InstallationUpdate:
    type: object
    additionalProperties: false
    properties:
      scheduled_start:
        type: string
        format: date-time
        nullable: true
      scheduled_end:
        type: string
        format: date-time
        nullable: true
      notes:
        type: string
        nullable: true
