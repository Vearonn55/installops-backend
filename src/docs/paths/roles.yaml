paths:
  /roles:
    get:
      tags: [Roles]
      summary: List roles
      security:
        - sessionCookie: []
      parameters:
        - in: query
          name: limit
          schema: { type: integer, minimum: 0, default: 20 }
        - in: query
          name: offset
          schema: { type: integer, minimum: 0, default: 0 }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '../components/users_roles.yaml#/schemas/RoleList' }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: { $ref: '../components/base.yaml#/schemas/Error' }

    post:
      tags: [Roles]
      summary: Create role
      security:
        - sessionCookie: []
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '../components/users_roles.yaml#/schemas/RoleCreate' }
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: { $ref: '../components/users_roles.yaml#/schemas/Role' }
        '400':
          description: Bad Request
          content:
            application/json:
              schema: { $ref: '../components/base.yaml#/schemas/Error' }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: { $ref: '../components/base.yaml#/schemas/Error' }
        '409':
          description: Conflict
          content:
            application/json:
              schema: { $ref: '../components/base.yaml#/schemas/Error' }

  /roles/{id}:
    get:
      tags: [Roles]
      summary: Get role by ID
      security:
        - sessionCookie: []
      parameters:
        - in: path
          name: id
          required: true
          schema: { $ref: '../components/base.yaml#/schemas/ID' }
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema: { $ref: '../components/users_roles.yaml#/schemas/Role' }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: { $ref: '../components/base.yaml#/schemas/Error' }
        '404':
          description: Not found
          content:
            application/json:
              schema: { $ref: '../components/base.yaml#/schemas/Error' }

    patch:
      tags: [Roles]
      summary: Update role
      security:
        - sessionCookie: []
      parameters:
        - in: path
          name: id
          required: true
          schema: { $ref: '../components/base.yaml#/schemas/ID' }
      requestBody:
        required: true
        content:
          application/json:
            schema: { $ref: '../components/users_roles.yaml#/schemas/RoleUpdate' }
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema: { $ref: '../components/users_roles.yaml#/schemas/Role' }
        '400':
          description: Bad Request
          content:
            application/json:
              schema: { $ref: '../components/base.yaml#/schemas/Error' }
        '401':
          description: Unauthorized
          content:
            application/json:
              schema: { $ref: '../components/base.yaml#/schemas/Error' }
        '404':
          description: Not found
          content:
            application/json:
              schema: { $ref: '../components/base.yaml#/schemas/Error' }
